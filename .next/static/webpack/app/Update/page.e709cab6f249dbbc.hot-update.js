"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/Update/page",{

/***/ "(app-pages-browser)/./app/updateMail.jsx":
/*!****************************!*\
  !*** ./app/updateMail.jsx ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMailById: () => (/* binding */ useMailById)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_supabaseClient_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/supabaseClient.js */ \"(app-pages-browser)/./app/lib/supabaseClient.js\");\nvar _s = $RefreshSig$();\n\n\nconst [officeID, setOfficeID] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null); // Store officeID in state\nfunction removeDoubleQuotesAndLeaveChars(str) {\n    if (typeof str !== 'string') {\n        return ''; // Or handle the non-string case appropriately\n    }\n    return str.replace(/\"/g, '');\n}\n(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n    if (true) {\n        const storedOfficeID = sessionStorage.getItem('officeID');\n        setOfficeID(storedOfficeID);\n    }\n}, []); // Get officeID from sessionStorage once on mount\nconst fetchMailById = async (mailId)=>{\n    try {\n        const { data, error } = await _lib_supabaseClient_js__WEBPACK_IMPORTED_MODULE_1__.supabase.from(officeID).select('*').eq('mail_id', mailId); // Assumes 'id' is the column for mail ID\n        if (error) {\n            console.error('Error fetching mail by ID:', error);\n            return null;\n        }\n        return data;\n    } catch (err) {\n        console.error('Unexpected error:', err);\n        return null;\n    }\n};\nconst updateMailById = async (mailId, updates)=>{\n    try {\n        const { data, error } = await _lib_supabaseClient_js__WEBPACK_IMPORTED_MODULE_1__.supabase.from(officeID).update(updates).eq('mail_id', mailId); // Assumes 'id' is the column for mail ID\n        if (error) {\n            console.error('Error updating mail by ID:', error);\n            return null;\n        }\n        return data;\n    } catch (err) {\n        console.error('Unexpected error:', err);\n        return null;\n    }\n};\nconst useMailById = (mailId)=>{\n    _s();\n    const [mailData, setMailData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useMailById.useEffect\": ()=>{\n            const fetchData = {\n                \"useMailById.useEffect.fetchData\": async ()=>{\n                    setLoading(true);\n                    const data = await fetchMailById(mailId);\n                    setMailData(data);\n                    setLoading(false);\n                }\n            }[\"useMailById.useEffect.fetchData\"];\n            if (mailId) fetchData();\n        }\n    }[\"useMailById.useEffect\"], [\n        mailId\n    ]);\n    return {\n        mailData,\n        loading,\n        updateMailById\n    };\n};\n_s(useMailById, \"6DGCqk9wWBnnn33ihIjtrXB12lc=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91cGRhdGVNYWlsLmpzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0QztBQUNPO0FBQ25ELE1BQU0sQ0FBQ0csVUFBVUMsWUFBWSxHQUFHSiwrQ0FBUUEsQ0FBQyxPQUFPLDBCQUEwQjtBQUUxRSxTQUFTSyxnQ0FBZ0NDLEdBQUc7SUFDMUMsSUFBSSxPQUFPQSxRQUFRLFVBQVU7UUFDM0IsT0FBTyxJQUFJLDhDQUE4QztJQUMzRDtJQUNBLE9BQU9BLElBQUlDLE9BQU8sQ0FBQyxNQUFNO0FBQzNCO0FBRUFOLGdEQUFTQSxDQUFDO0lBQ04sSUFBSSxJQUE2QixFQUFFO1FBQ2pDLE1BQU1PLGlCQUFpQkMsZUFBZUMsT0FBTyxDQUFDO1FBQzlDTixZQUFZSTtJQUNkO0FBQ0YsR0FBRyxFQUFFLEdBQUcsaURBQWlEO0FBRTNELE1BQU1HLGdCQUFnQixPQUFPQztJQUMxQixJQUFJO1FBQ0QsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1aLDREQUFRQSxDQUNsQ2EsSUFBSSxDQUFDWixVQUNMYSxNQUFNLENBQUMsS0FDUEMsRUFBRSxDQUFDLFdBQVdMLFNBQVMseUNBQXlDO1FBRXBFLElBQUlFLE9BQU87WUFDUkksUUFBUUosS0FBSyxDQUFDLDhCQUE4QkE7WUFDNUMsT0FBTztRQUNWO1FBRUEsT0FBT0Q7SUFDVixFQUFFLE9BQU9NLEtBQUs7UUFDWEQsUUFBUUosS0FBSyxDQUFDLHFCQUFxQks7UUFDbkMsT0FBTztJQUNWO0FBQ0g7QUFFQSxNQUFNQyxpQkFBaUIsT0FBT1IsUUFBUVM7SUFDbkMsSUFBSTtRQUNELE1BQU0sRUFBRVIsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNWiw0REFBUUEsQ0FDbENhLElBQUksQ0FBQ1osVUFDTG1CLE1BQU0sQ0FBQ0QsU0FDUEosRUFBRSxDQUFDLFdBQVdMLFNBQVMseUNBQXlDO1FBRXBFLElBQUlFLE9BQU87WUFDUkksUUFBUUosS0FBSyxDQUFDLDhCQUE4QkE7WUFDNUMsT0FBTztRQUNWO1FBRUEsT0FBT0Q7SUFDVixFQUFFLE9BQU9NLEtBQUs7UUFDWEQsUUFBUUosS0FBSyxDQUFDLHFCQUFxQks7UUFDbkMsT0FBTztJQUNWO0FBQ0g7QUFFTyxNQUFNSSxjQUFjLENBQUNYOztJQUN6QixNQUFNLENBQUNZLFVBQVVDLFlBQVksR0FBR3pCLCtDQUFRQSxDQUFDO0lBQ3pDLE1BQU0sQ0FBQzBCLFNBQVNDLFdBQVcsR0FBRzNCLCtDQUFRQSxDQUFDO0lBR3ZDQyxnREFBU0E7aUNBQUM7WUFDUCxNQUFNMkI7bURBQVk7b0JBQ2ZELFdBQVc7b0JBQ1gsTUFBTWQsT0FBTyxNQUFNRixjQUFjQztvQkFDakNhLFlBQVlaO29CQUNaYyxXQUFXO2dCQUNkOztZQUVBLElBQUlmLFFBQVFnQjtRQUNmO2dDQUFHO1FBQUNoQjtLQUFPO0lBRVgsT0FBTztRQUFFWTtRQUFVRTtRQUFTTjtJQUFlO0FBQzlDLEVBQUU7R0FqQldHIiwic291cmNlcyI6WyIvVXNlcnMvYXBwbGVfMS9EZXNrdG9wL2VtbXMtYXBwL2FwcC91cGRhdGVNYWlsLmpzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgc3VwYWJhc2UgfSBmcm9tICcuL2xpYi9zdXBhYmFzZUNsaWVudC5qcyc7IFxuY29uc3QgW29mZmljZUlELCBzZXRPZmZpY2VJRF0gPSB1c2VTdGF0ZShudWxsKTsgLy8gU3RvcmUgb2ZmaWNlSUQgaW4gc3RhdGVcblxuZnVuY3Rpb24gcmVtb3ZlRG91YmxlUXVvdGVzQW5kTGVhdmVDaGFycyhzdHIpIHtcbiAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuICcnOyAvLyBPciBoYW5kbGUgdGhlIG5vbi1zdHJpbmcgY2FzZSBhcHByb3ByaWF0ZWx5XG4gIH1cbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9cIi9nLCAnJyk7XG59XG5cbnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7IC8vIENoZWNrIGlmIHdpbmRvdyBpcyBkZWZpbmVkXG4gICAgICBjb25zdCBzdG9yZWRPZmZpY2VJRCA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ29mZmljZUlEJyk7XG4gICAgICBzZXRPZmZpY2VJRChzdG9yZWRPZmZpY2VJRCk7XG4gICAgfVxuICB9LCBbXSk7IC8vIEdldCBvZmZpY2VJRCBmcm9tIHNlc3Npb25TdG9yYWdlIG9uY2Ugb24gbW91bnRcblxuY29uc3QgZmV0Y2hNYWlsQnlJZCA9IGFzeW5jIChtYWlsSWQpID0+IHtcbiAgIHRyeSB7XG4gICAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgICAgLmZyb20ob2ZmaWNlSUQpXG4gICAgICAgICAuc2VsZWN0KCcqJylcbiAgICAgICAgIC5lcSgnbWFpbF9pZCcsIG1haWxJZCk7IC8vIEFzc3VtZXMgJ2lkJyBpcyB0aGUgY29sdW1uIGZvciBtYWlsIElEXG5cbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgbWFpbCBieSBJRDonLCBlcnJvcik7XG4gICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGRhdGE7XG4gICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuZXhwZWN0ZWQgZXJyb3I6JywgZXJyKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgfVxufTtcblxuY29uc3QgdXBkYXRlTWFpbEJ5SWQgPSBhc3luYyAobWFpbElkLCB1cGRhdGVzKSA9PiB7XG4gICB0cnkge1xuICAgICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgIC5mcm9tKG9mZmljZUlEKVxuICAgICAgICAgLnVwZGF0ZSh1cGRhdGVzKVxuICAgICAgICAgLmVxKCdtYWlsX2lkJywgbWFpbElkKTsgLy8gQXNzdW1lcyAnaWQnIGlzIHRoZSBjb2x1bW4gZm9yIG1haWwgSURcblxuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciB1cGRhdGluZyBtYWlsIGJ5IElEOicsIGVycm9yKTtcbiAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZGF0YTtcbiAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcignVW5leHBlY3RlZCBlcnJvcjonLCBlcnIpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICB9XG59O1xuXG5leHBvcnQgY29uc3QgdXNlTWFpbEJ5SWQgPSAobWFpbElkKSA9PiB7XG4gICBjb25zdCBbbWFpbERhdGEsIHNldE1haWxEYXRhXSA9IHVzZVN0YXRlKG51bGwpO1xuICAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XG4gICBcblxuICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgIGNvbnN0IGZldGNoRGF0YSA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgIHNldExvYWRpbmcodHJ1ZSk7XG4gICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgZmV0Y2hNYWlsQnlJZChtYWlsSWQpO1xuICAgICAgICAgc2V0TWFpbERhdGEoZGF0YSk7XG4gICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIH07XG5cbiAgICAgIGlmIChtYWlsSWQpIGZldGNoRGF0YSgpO1xuICAgfSwgW21haWxJZF0pO1xuXG4gICByZXR1cm4geyBtYWlsRGF0YSwgbG9hZGluZywgdXBkYXRlTWFpbEJ5SWQgfTtcbn07XG4iXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJzdXBhYmFzZSIsIm9mZmljZUlEIiwic2V0T2ZmaWNlSUQiLCJyZW1vdmVEb3VibGVRdW90ZXNBbmRMZWF2ZUNoYXJzIiwic3RyIiwicmVwbGFjZSIsInN0b3JlZE9mZmljZUlEIiwic2Vzc2lvblN0b3JhZ2UiLCJnZXRJdGVtIiwiZmV0Y2hNYWlsQnlJZCIsIm1haWxJZCIsImRhdGEiLCJlcnJvciIsImZyb20iLCJzZWxlY3QiLCJlcSIsImNvbnNvbGUiLCJlcnIiLCJ1cGRhdGVNYWlsQnlJZCIsInVwZGF0ZXMiLCJ1cGRhdGUiLCJ1c2VNYWlsQnlJZCIsIm1haWxEYXRhIiwic2V0TWFpbERhdGEiLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsImZldGNoRGF0YSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/updateMail.jsx\n"));

/***/ })

});