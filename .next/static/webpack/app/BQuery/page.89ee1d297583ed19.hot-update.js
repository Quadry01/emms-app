"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/BQuery/page",{

/***/ "(app-pages-browser)/./app/fetchMail.jsx":
/*!***************************!*\
  !*** ./app/fetchMail.jsx ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMailsBySender: () => (/* binding */ useMailsBySender)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_supabaseClient_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .//lib/supabaseClient.js */ \"(app-pages-browser)/./app/lib/supabaseClient.js\");\n/* __next_internal_client_entry_do_not_use__ useMailsBySender auto */ var _s = $RefreshSig$();\n\n\nfunction removeDoubleQuotesAndLeaveChars(str) {\n    if (typeof str !== 'string') {\n        return ''; // Or handle the non-string case appropriately\n    }\n    return str.replace(/\"/g, '');\n}\n// Custom hook to fetch mails by sender\nconst useMailsBySender = (sender)=>{\n    _s();\n    const [mailData, setMailData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [officeID, setOfficeID] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null); // Store officeID in state\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useMailsBySender.useEffect\": ()=>{\n            if (true) {\n                const storedOfficeID = sessionStorage.getItem('officeID');\n                setOfficeID(storedOfficeID);\n            }\n        }\n    }[\"useMailsBySender.useEffect\"], []); // Get officeID from sessionStorage once on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useMailsBySender.useEffect\": ()=>{\n            const fetchData = {\n                \"useMailsBySender.useEffect.fetchData\": async ()=>{\n                    setLoading(true);\n                    if (sender && officeID) {\n                        const filteredOfficeID = removeDoubleQuotesAndLeaveChars(officeID);\n                        try {\n                            const { data, error } = await _lib_supabaseClient_js__WEBPACK_IMPORTED_MODULE_1__.supabase.from(filteredOfficeID).select('*').ilike('sender', \"%\".concat(sender, \"%\"));\n                            if (error) {\n                                console.error('Error fetching mails by sender:', error);\n                                setMailData(null); // Clear data on error\n                            } else {\n                                setMailData(data);\n                            }\n                        } catch (err) {\n                            console.error('Unexpected error:', err);\n                            setMailData(null); // Clear data on error\n                        }\n                    } else {\n                        setMailData(null); // Clear data if sender or officeID is missing\n                    }\n                    setLoading(false);\n                }\n            }[\"useMailsBySender.useEffect.fetchData\"];\n            fetchData(); // Call fetchData immediately, not conditionally\n        }\n    }[\"useMailsBySender.useEffect\"], [\n        sender,\n        officeID\n    ]); // Now depends on both sender and officeID\n    return {\n        mailData,\n        loading\n    };\n};\n_s(useMailsBySender, \"IS2Evee770OegZTbq2Nr6C4K/fI=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9mZXRjaE1haWwuanN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQzRDO0FBQ1E7QUFFcEQsU0FBU0csZ0NBQWdDQyxHQUFHO0lBQzFDLElBQUksT0FBT0EsUUFBUSxVQUFVO1FBQzNCLE9BQU8sSUFBSSw4Q0FBOEM7SUFDM0Q7SUFDQSxPQUFPQSxJQUFJQyxPQUFPLENBQUMsTUFBTTtBQUMzQjtBQUVBLHVDQUF1QztBQUNoQyxNQUFNQyxtQkFBbUIsQ0FBQ0M7O0lBQy9CLE1BQU0sQ0FBQ0MsVUFBVUMsWUFBWSxHQUFHVCwrQ0FBUUEsQ0FBQztJQUN6QyxNQUFNLENBQUNVLFNBQVNDLFdBQVcsR0FBR1gsK0NBQVFBLENBQUM7SUFDdkMsTUFBTSxDQUFDWSxVQUFVQyxZQUFZLEdBQUdiLCtDQUFRQSxDQUFDLE9BQU8sMEJBQTBCO0lBRTFFQyxnREFBU0E7c0NBQUM7WUFDUixJQUFJLElBQTZCLEVBQUU7Z0JBQ2pDLE1BQU1hLGlCQUFpQkMsZUFBZUMsT0FBTyxDQUFDO2dCQUM5Q0gsWUFBWUM7WUFDZDtRQUNGO3FDQUFHLEVBQUUsR0FBRyxpREFBaUQ7SUFFekRiLGdEQUFTQTtzQ0FBQztZQUNSLE1BQU1nQjt3REFBWTtvQkFDaEJOLFdBQVc7b0JBQ1gsSUFBSUosVUFBVUssVUFBVTt3QkFDdEIsTUFBTU0sbUJBQW1CZixnQ0FBZ0NTO3dCQUN6RCxJQUFJOzRCQUNGLE1BQU0sRUFBRU8sSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNbEIsNERBQVFBLENBQ25DbUIsSUFBSSxDQUFDSCxrQkFDTEksTUFBTSxDQUFDLEtBQ1BDLEtBQUssQ0FBQyxVQUFVLElBQVcsT0FBUGhCLFFBQU87NEJBRTlCLElBQUlhLE9BQU87Z0NBQ1RJLFFBQVFKLEtBQUssQ0FBQyxtQ0FBbUNBO2dDQUNqRFgsWUFBWSxPQUFPLHNCQUFzQjs0QkFDM0MsT0FBTztnQ0FDTEEsWUFBWVU7NEJBQ2Q7d0JBQ0YsRUFBRSxPQUFPTSxLQUFLOzRCQUNaRCxRQUFRSixLQUFLLENBQUMscUJBQXFCSzs0QkFDbkNoQixZQUFZLE9BQU8sc0JBQXNCO3dCQUMzQztvQkFDRixPQUFPO3dCQUNMQSxZQUFZLE9BQU8sOENBQThDO29CQUNuRTtvQkFDQUUsV0FBVztnQkFDYjs7WUFFQU0sYUFBYSxnREFBZ0Q7UUFDL0Q7cUNBQUc7UUFBQ1Y7UUFBUUs7S0FBUyxHQUFHLDBDQUEwQztJQUVsRSxPQUFPO1FBQUVKO1FBQVVFO0lBQVE7QUFDN0IsRUFBRTtHQTNDV0oiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hcHBsZV8xL0Rlc2t0b3AvZW1tcy1hcHAvYXBwL2ZldGNoTWFpbC5qc3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgc3VwYWJhc2UgfSBmcm9tICcuLy9saWIvc3VwYWJhc2VDbGllbnQuanMnO1xuXG5mdW5jdGlvbiByZW1vdmVEb3VibGVRdW90ZXNBbmRMZWF2ZUNoYXJzKHN0cikge1xuICBpZiAodHlwZW9mIHN0ciAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gJyc7IC8vIE9yIGhhbmRsZSB0aGUgbm9uLXN0cmluZyBjYXNlIGFwcHJvcHJpYXRlbHlcbiAgfVxuICByZXR1cm4gc3RyLnJlcGxhY2UoL1wiL2csICcnKTtcbn1cblxuLy8gQ3VzdG9tIGhvb2sgdG8gZmV0Y2ggbWFpbHMgYnkgc2VuZGVyXG5leHBvcnQgY29uc3QgdXNlTWFpbHNCeVNlbmRlciA9IChzZW5kZXIpID0+IHtcbiAgY29uc3QgW21haWxEYXRhLCBzZXRNYWlsRGF0YV0gPSB1c2VTdGF0ZShudWxsKTtcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtvZmZpY2VJRCwgc2V0T2ZmaWNlSURdID0gdXNlU3RhdGUobnVsbCk7IC8vIFN0b3JlIG9mZmljZUlEIGluIHN0YXRlXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHsgLy8gQ2hlY2sgaWYgd2luZG93IGlzIGRlZmluZWRcbiAgICAgIGNvbnN0IHN0b3JlZE9mZmljZUlEID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnb2ZmaWNlSUQnKTtcbiAgICAgIHNldE9mZmljZUlEKHN0b3JlZE9mZmljZUlEKTtcbiAgICB9XG4gIH0sIFtdKTsgLy8gR2V0IG9mZmljZUlEIGZyb20gc2Vzc2lvblN0b3JhZ2Ugb25jZSBvbiBtb3VudFxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgZmV0Y2hEYXRhID0gYXN5bmMgKCkgPT4ge1xuICAgICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICAgIGlmIChzZW5kZXIgJiYgb2ZmaWNlSUQpIHsgLy8gQ2hlY2sgaWYgc2VuZGVyIGFuZCBvZmZpY2VJRCBhcmUgYXZhaWxhYmxlXG4gICAgICAgIGNvbnN0IGZpbHRlcmVkT2ZmaWNlSUQgPSByZW1vdmVEb3VibGVRdW90ZXNBbmRMZWF2ZUNoYXJzKG9mZmljZUlEKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgICAgICAgLmZyb20oZmlsdGVyZWRPZmZpY2VJRClcbiAgICAgICAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgICAgICAgLmlsaWtlKCdzZW5kZXInLCBgJSR7c2VuZGVyfSVgKTtcblxuICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgbWFpbHMgYnkgc2VuZGVyOicsIGVycm9yKTtcbiAgICAgICAgICAgIHNldE1haWxEYXRhKG51bGwpOyAvLyBDbGVhciBkYXRhIG9uIGVycm9yXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldE1haWxEYXRhKGRhdGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignVW5leHBlY3RlZCBlcnJvcjonLCBlcnIpO1xuICAgICAgICAgIHNldE1haWxEYXRhKG51bGwpOyAvLyBDbGVhciBkYXRhIG9uIGVycm9yXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldE1haWxEYXRhKG51bGwpOyAvLyBDbGVhciBkYXRhIGlmIHNlbmRlciBvciBvZmZpY2VJRCBpcyBtaXNzaW5nXG4gICAgICB9XG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICB9O1xuXG4gICAgZmV0Y2hEYXRhKCk7IC8vIENhbGwgZmV0Y2hEYXRhIGltbWVkaWF0ZWx5LCBub3QgY29uZGl0aW9uYWxseVxuICB9LCBbc2VuZGVyLCBvZmZpY2VJRF0pOyAvLyBOb3cgZGVwZW5kcyBvbiBib3RoIHNlbmRlciBhbmQgb2ZmaWNlSURcblxuICByZXR1cm4geyBtYWlsRGF0YSwgbG9hZGluZyB9O1xufTsiXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJzdXBhYmFzZSIsInJlbW92ZURvdWJsZVF1b3Rlc0FuZExlYXZlQ2hhcnMiLCJzdHIiLCJyZXBsYWNlIiwidXNlTWFpbHNCeVNlbmRlciIsInNlbmRlciIsIm1haWxEYXRhIiwic2V0TWFpbERhdGEiLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsIm9mZmljZUlEIiwic2V0T2ZmaWNlSUQiLCJzdG9yZWRPZmZpY2VJRCIsInNlc3Npb25TdG9yYWdlIiwiZ2V0SXRlbSIsImZldGNoRGF0YSIsImZpbHRlcmVkT2ZmaWNlSUQiLCJkYXRhIiwiZXJyb3IiLCJmcm9tIiwic2VsZWN0IiwiaWxpa2UiLCJjb25zb2xlIiwiZXJyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/fetchMail.jsx\n"));

/***/ })

});